[{"D:\\coderiver\\projects\\tabs\\src\\index.js":"1","D:\\coderiver\\projects\\tabs\\src\\components\\App\\App.js":"2","D:\\coderiver\\projects\\tabs\\src\\components\\App\\index.js":"3","D:\\coderiver\\projects\\tabs\\src\\components\\Tabs\\index.js":"4","D:\\coderiver\\projects\\tabs\\src\\components\\Tabs\\Tabs.js":"5","D:\\coderiver\\projects\\tabs\\src\\components\\TabItem\\index.js":"6","D:\\coderiver\\projects\\tabs\\src\\components\\TabItem\\TabItem.js":"7","D:\\coderiver\\projects\\tabs\\src\\options\\options.js":"8","D:\\coderiver\\projects\\tabs\\src\\components\\CurrentTabText\\index.js":"9","D:\\coderiver\\projects\\tabs\\src\\components\\CurrentTabText\\CurrentTabText.js":"10","D:\\coderiver\\projects\\tabs\\src\\propTypesShapes\\index.js":"11","D:\\coderiver\\projects\\tabs\\src\\propTypesShapes\\tabPropTypesShapes.js":"12"},{"size":166,"mtime":1609334931642,"results":"13","hashOfConfig":"14"},{"size":1150,"mtime":1609837336459,"results":"15","hashOfConfig":"14"},{"size":23,"mtime":1609334898114,"results":"16","hashOfConfig":"14"},{"size":24,"mtime":1609335234600,"results":"17","hashOfConfig":"14"},{"size":2382,"mtime":1609836788464,"results":"18","hashOfConfig":"14"},{"size":27,"mtime":1609337308191,"results":"19","hashOfConfig":"14"},{"size":1012,"mtime":1609838960358,"results":"20","hashOfConfig":"14"},{"size":217,"mtime":1609838890571,"results":"21","hashOfConfig":"14"},{"size":34,"mtime":1609832675823,"results":"22","hashOfConfig":"14"},{"size":260,"mtime":1609836905112,"results":"23","hashOfConfig":"14"},{"size":38,"mtime":1609836667639,"results":"24","hashOfConfig":"14"},{"size":181,"mtime":1609836665789,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1cv6sw7",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\coderiver\\projects\\tabs\\src\\index.js",[],["52","53"],"D:\\coderiver\\projects\\tabs\\src\\components\\App\\App.js",[],"D:\\coderiver\\projects\\tabs\\src\\components\\App\\index.js",[],"D:\\coderiver\\projects\\tabs\\src\\components\\Tabs\\index.js",[],"D:\\coderiver\\projects\\tabs\\src\\components\\Tabs\\Tabs.js",["54"],"import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TabItem } from '../TabItem';\nimport './Tabs.sass';\nimport { TAB_PROPTYPES_SHAPE } from '../../propTypesShapes';\n\nexport function Tabs({\n  tabsList,\n  currentTab,\n  handleSelectTab,\n  renderDefaultTabLabel,\n  renderTabLabel,\n}) {\n  const parentElement = useRef(null);\n  const [tabItemsElements, setTabItemsElements] = useState(null);\n  const [sizes, setSizes] = useState(null);\n  const transitionTime = 500;\n  const transitionStyle = `left ${transitionTime}ms, right ${transitionTime}ms`;\n\n  const getTabItemsElements = () => {\n    const tabItems = parentElement.current.querySelectorAll('li');\n\n    setTabItemsElements(tabItems);\n  };\n\n  const getSizes = () => {\n    const rootBounds = parentElement.current.getBoundingClientRect();\n\n    const sizes = {};\n\n    Object.values(tabItemsElements).forEach((item, i) => {\n      const bounds = item.getBoundingClientRect();\n\n      const left = bounds.left - rootBounds.left;\n      const right = rootBounds.right - bounds.right;\n\n      const key = tabsList[i].value;\n      sizes[key] = { left, right };\n    });\n\n    setSizes(sizes);\n  };\n\n  useEffect(() => {\n    getTabItemsElements();\n  }, []);\n\n  useEffect(() => {\n    if (!tabItemsElements) {\n      return;\n    }\n\n    getSizes();\n  }, [tabItemsElements]);\n\n  const getHighlighterStyle = () => {\n    if (!sizes) {\n      return {\n        left: '0',\n        right: '100%',\n      };\n    }\n\n    const size = sizes[currentTab.value];\n\n    return {\n      left: `${size.left}px`,\n      right: `${size.right}px`,\n      transition: transitionStyle,\n    };\n  };\n\n  return (\n    <>\n      <ul className=\"tabs\" ref={parentElement}>\n        {tabsList.map(tab => (\n          <TabItem\n            key={tab.value}\n            tab={tab}\n            currentTab={currentTab}\n            handleSelectTab={handleSelectTab}\n            getHighlighterStyle={getHighlighterStyle}\n            renderDefaultTabLabel={renderDefaultTabLabel}\n            renderTabLabel={renderTabLabel}\n          />\n        ))}\n      </ul>\n    </>\n  );\n  }\n\nTabs.propTypes = {\n  tabsList: PropTypes.arrayOf(\n    TAB_PROPTYPES_SHAPE\n  ).isRequired,\n  currentTab: TAB_PROPTYPES_SHAPE,\n  handleSelectTab: PropTypes.func.isRequired,\n  renderTabLabel: PropTypes.func.isRequired,\n  renderDefaultTabLabel: PropTypes.func.isRequired,\n};\n","D:\\coderiver\\projects\\tabs\\src\\components\\TabItem\\index.js",[],"D:\\coderiver\\projects\\tabs\\src\\components\\TabItem\\TabItem.js",[],"D:\\coderiver\\projects\\tabs\\src\\options\\options.js",[],"D:\\coderiver\\projects\\tabs\\src\\components\\CurrentTabText\\index.js",[],"D:\\coderiver\\projects\\tabs\\src\\components\\CurrentTabText\\CurrentTabText.js",[],"D:\\coderiver\\projects\\tabs\\src\\propTypesShapes\\index.js",[],"D:\\coderiver\\projects\\tabs\\src\\propTypesShapes\\tabPropTypesShapes.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":54,"column":6,"nodeType":"61","endLine":54,"endColumn":24,"suggestions":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSizes'. Either include it or remove the dependency array.","ArrayExpression",["65"],"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [getSizes, tabItemsElements]",{"range":"68","text":"69"},[1335,1353],"[getSizes, tabItemsElements]"]