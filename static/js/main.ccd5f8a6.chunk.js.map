{"version":3,"sources":["helpers/_constants.js","propTypesShapes/tabPropTypesShape.js","propTypesShapes/sizesPropTypesShape.js","components/TabItem/TabItem.js","components/TabsList/TabsList.js","components/CurrentTabText/CurrentTabText.js","options/options.js","components/Tabs/Tabs.js","index.js"],"names":["TRANSITION_STYLE","PropTypes","shape","value","string","isRequired","label","Images","left","number","right","Videos","Friends","TabItem","tab","currentTab","handleSelectTab","sizes","renderDefaultTabLabel","renderTabLabel","className","classNames","type","onClick","style","size","transition","getHighlighterStyle","TabsList","tabsList","parentElement","useRef","useState","tabItemsElements","setTabItemsElements","setSizes","useEffect","tabItems","current","querySelectorAll","getTabItemsElements","rootBounds","getBoundingClientRect","Object","values","forEach","item","i","itemBounds","key","getSizes","ref","map","CurrentTabText","renderTabText","propTypes","func","options","Tabs","setCurrentTab","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ccd5f8a6.chunk.js","sourcesContent":["const TRANSITION_TIME = 500;\nexport const TRANSITION_STYLE = `left ${TRANSITION_TIME}ms, right ${TRANSITION_TIME}ms`;\n","import PropTypes from 'prop-types';\n\nexport const TAB_PROPTYPES_SHAPE = PropTypes.shape({\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n}).isRequired;\n","import PropTypes from 'prop-types';\n\nexport const SIZES_PROPTYPES_SHAPE = PropTypes.shape({\n  Images: PropTypes.shape({\n    left: PropTypes.number.isRequired,\n    right: PropTypes.number.isRequired,\n  }).isRequired,\n  Videos: PropTypes.shape({\n    left: PropTypes.number.isRequired,\n    right: PropTypes.number.isRequired,\n  }).isRequired,\n  Friends: PropTypes.shape({\n    left: PropTypes.number.isRequired,\n    right: PropTypes.number.isRequired,\n  }).isRequired,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './TabItem.sass';\nimport { TAB_PROPTYPES_SHAPE, SIZES_PROPTYPES_SHAPE } from '../../propTypesShapes';\nimport { TRANSITION_STYLE } from '../../helpers/_constants';\n\nexport function TabItem({\n  tab,\n  currentTab,\n  handleSelectTab,\n  sizes,\n  renderDefaultTabLabel,\n  renderTabLabel,\n}) {\n  const getHighlighterStyle = () => {\n    if (!sizes) {\n      return {\n        left: '0',\n        right: '100%',\n      };\n    }\n\n    const size = sizes[currentTab.value];\n\n    return {\n      left: `${size.left}px`,\n      right: `${size.right}px`,\n      transition: TRANSITION_STYLE,\n    };\n  };\n\n  return (\n    <li className=\"tab-item\">\n      <button\n        className={classNames('tab-item__button', {\n          'tab-item__button_active': currentTab.value === tab.value,\n        })}\n        type=\"button\"\n        onClick={() => handleSelectTab(tab)}\n      >\n        {renderTabLabel(tab) || renderDefaultTabLabel(tab)}\n      </button>\n\n      <span className=\"tab-item__highlighter\" style={getHighlighterStyle()}></span>\n    </li>\n  );\n}\n\nTabItem.propTypes = {\n  tab: TAB_PROPTYPES_SHAPE,\n  currentTab: TAB_PROPTYPES_SHAPE,\n  handleSelectTab: PropTypes.func.isRequired,\n  renderTabLabel: PropTypes.func.isRequired,\n  renderDefaultTabLabel: PropTypes.func.isRequired,\n  sizes: SIZES_PROPTYPES_SHAPE,\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TabItem } from '../TabItem';\nimport './TabsList.sass';\nimport { TAB_PROPTYPES_SHAPE } from '../../propTypesShapes';\n\nexport function TabsList({\n  tabsList,\n  currentTab,\n  handleSelectTab,\n  renderDefaultTabLabel,\n  renderTabLabel,\n}) {\n  const parentElement = useRef(null);\n  const [tabItemsElements, setTabItemsElements] = useState(null);\n  const [sizes, setSizes] = useState(null);\n\n  const getTabItemsElements = () => {\n    const tabItems = parentElement.current.querySelectorAll('li');\n\n    setTabItemsElements(tabItems);\n  };\n\n  const getSizes = () => {\n    const rootBounds = parentElement.current.getBoundingClientRect();\n\n    const sizes = {};\n\n    Object.values(tabItemsElements).forEach((item, i) => {\n      const itemBounds = item.getBoundingClientRect();\n\n      const left = itemBounds.left - rootBounds.left;\n      const right = rootBounds.right - itemBounds.right;\n\n      const key = tabsList[i].value;\n      sizes[key] = { left, right };\n    });\n\n    setSizes(sizes);\n  };\n\n  useEffect(() => {\n    getTabItemsElements();\n  }, []);\n\n  useEffect(() => {\n    if (!tabItemsElements) {\n      return;\n    }\n\n    getSizes();\n  }, [tabItemsElements]);\n\n  return (\n      <ul className=\"tabs-list\" ref={parentElement}>\n        {tabsList.map(tab => (\n          <TabItem\n            key={tab.value}\n            tab={tab}\n            currentTab={currentTab}\n            handleSelectTab={handleSelectTab}\n            sizes={sizes}\n            renderDefaultTabLabel={renderDefaultTabLabel}\n            renderTabLabel={renderTabLabel}\n          />\n        ))}\n      </ul>\n  );\n}\n\nTabsList.propTypes = {\n  tabsList: PropTypes.arrayOf(\n    TAB_PROPTYPES_SHAPE\n  ).isRequired,\n  currentTab: TAB_PROPTYPES_SHAPE,\n  handleSelectTab: PropTypes.func.isRequired,\n  renderTabLabel: PropTypes.func.isRequired,\n  renderDefaultTabLabel: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentTab.sass';\n\nexport const CurrentTabText = ({ renderTabText }) => (\n  <>\n    {renderTabText()}\n  </>\n);\n\nCurrentTabText.propTypes = {\n  renderTabText: PropTypes.func.isRequired,\n};\n","export const options = [\n  {\n    value: 'Images',\n    label: 'Tab One',\n  },\n  {\n    value: 'Videos',\n    label: 'Tab Two',\n  },\n  {\n    value: 'Friends',\n    label: 'Tab Three',\n  }\n];\n\nexport const DEFAULT_LABELS = true;\n","import React, { useState } from 'react';\nimport { TabsList } from '../TabsList';\nimport { CurrentTabText } from '../CurrentTabText';\nimport './Tabs.sass';\nimport './_reset.sass';\nimport { DEFAULT_LABELS, options } from '../../options/options';\n\nexport function Tabs() {\n  const [currentTab, setCurrentTab] = useState(options[0]);\n\n  const onChange = (tab) => {\n    setCurrentTab(tab);\n  };\n\n  const renderTabText = () => {\n    return (\n      <div className=\"current-tab\">\n        <p className=\"current-tab__text\">\n          {currentTab.label}\n        </p>\n      </div>\n    );\n  };\n\n  const renderTabLabel = (tab) => {\n    if (DEFAULT_LABELS) {\n      return null;\n    }\n\n    return (\n      <>\n        <p>Custom label</p>\n        {tab.label}\n      </>\n    );\n  };\n\n  const renderDefaultTabLabel = (tab) => {\n    return (\n      <>\n        {tab.label}\n      </>\n    );\n  };\n\n  return (\n    <div className=\"tabs\">\n      <TabsList\n        tabsList={options}\n        currentTab={currentTab}\n        handleSelectTab={onChange}\n        renderTabLabel={renderTabLabel}\n        renderDefaultTabLabel={renderDefaultTabLabel}\n      />\n\n      <CurrentTabText renderTabText={renderTabText} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Tabs } from './components/Tabs';\n\nReactDOM.render(\n  <Tabs />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}