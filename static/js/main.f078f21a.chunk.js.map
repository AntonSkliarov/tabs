{"version":3,"sources":["components/TabItem/TabItem.js","components/Tabs/Tabs.js","components/CurrentTabValue/CurrentTabValue.js","options/options.js","components/App/App.js","index.js"],"names":["TabItem","tab","currentTab","handleSelectTab","getHighlighterStyle","renderDefaultTabLabel","renderTabLabel","className","classNames","label","type","onClick","style","Tabs","tabsList","parentElement","useRef","useState","tabItemsElements","setTabItemsElements","sizes","setSizes","transitionStyle","useEffect","tabItems","current","querySelectorAll","getTabItemsElements","rootBounds","getBoundingClientRect","Object","values","forEach","item","i","bounds","left","right","key","getSizes","size","transition","ref","map","CurrentTabValue","renderTabValue","propTypes","PropTypes","func","isRequired","options","value","App","setCurrentTab","ReactDOM","render","document","getElementById"],"mappings":"kOAKO,SAASA,EAAT,GAOH,IANFC,EAMC,EANDA,IACAC,EAKC,EALDA,WACAC,EAIC,EAJDA,gBACAC,EAGC,EAHDA,oBACAC,EAEC,EAFDA,sBACAC,EACC,EADDA,eAGA,OACE,qBAAIC,UAAU,WAAd,UACE,wBAAQA,UAAWC,IAAW,mBAAoB,CAC9C,0BAA2BN,EAAWO,QAAUR,EAAIQ,QAEtDC,KAAK,SACLC,QAAS,kBAAMR,EAAgBF,IAJjC,SAMGK,EAAeL,IAAQI,EAAsBJ,KAEhD,sBAAMM,UAAU,wBAAwBK,MAAOR,S,MCnB9C,SAASS,EAAT,GAMH,IALFC,EAKC,EALDA,SACAZ,EAIC,EAJDA,WACAC,EAGC,EAHDA,gBACAE,EAEC,EAFDA,sBACAC,EACC,EADDA,eAEMS,EAAgBC,iBAAO,MAD5B,EAE+CC,mBAAS,MAFxD,mBAEMC,EAFN,KAEwBC,EAFxB,OAGyBF,mBAAS,MAHlC,mBAGMG,EAHN,KAGaC,EAHb,KAKKC,EAAe,eADE,IACF,qBADE,IACF,MA0BrBC,qBAAU,YAxBkB,WAC1B,IAAMC,EAAWT,EAAcU,QAAQC,iBAAiB,MAExDP,EAAoBK,GAsBpBG,KACC,IAEHJ,qBAAU,WACHL,GAvBU,WACf,IAAMU,EAAab,EAAcU,QAAQI,wBAEnCT,EAAQ,GAEdU,OAAOC,OAAOb,GAAkBc,SAAQ,SAACC,EAAMC,GAC7C,IAAMC,EAASF,EAAKJ,wBAEdO,EAAOD,EAAOC,KAAOR,EAAWQ,KAChCC,EAAQT,EAAWS,MAAQF,EAAOE,MAElCC,EAAMxB,EAASoB,GAAGzB,MACxBW,EAAMkB,GAAO,CAAEF,OAAMC,YAGvBhB,EAASD,GAYTmB,KACC,CAACrB,IAEJ,IAAMd,EAAsB,WAC1B,IAAKgB,EACH,MAAO,CAACgB,KAAM,IAAKC,MAAO,QAG5B,IAAMG,EAAOpB,EAAMlB,EAAWO,OAE9B,MAAO,CACL2B,KAAK,GAAD,OAAKI,EAAKJ,KAAV,MACJC,MAAM,GAAD,OAAKG,EAAKH,MAAV,MACLI,WAAYnB,IAIhB,OACE,mCACE,oBAAIf,UAAU,OAAOmC,IAAK3B,EAA1B,SACGD,EAAS6B,KAAI,SAAA1C,GAAG,OACf,cAAC,EAAD,CAEEA,IAAKA,EACLC,WAAYA,EACZC,gBAAiBA,EACjBC,oBAAqBA,EACrBC,sBAAuBA,EACvBC,eAAgBA,GANXL,EAAIQ,c,oBCtEd,SAASmC,EAAT,GAA8C,IAAnBC,EAAkB,EAAlBA,eAChC,OACE,mCACGA,MAKPD,EAAgBE,UAAY,CAC1BD,eAAgBE,IAAUC,KAAKC,Y,UCZpBC,EAAU,CACrB,CACEC,MAAO,0BACP1C,MAAO,WAET,CACE0C,MAAO,mHACP1C,MAAO,WAET,CACE0C,MAAO,yNACP1C,MAAO,cCLJ,SAAS2C,IAAO,IAAD,EACgBnC,mBAASiC,EAAQ,IADjC,mBACbhD,EADa,KACDmD,EADC,KAsCpB,OACE,sBAAK9C,UAAU,MAAf,UACE,sCACA,cAAC,EAAD,CACEO,SAAUoC,EACVhD,WAAYA,EACZC,gBAzCW,SAACF,GAChBoD,EAAcpD,IAyCVI,sBAfwB,SAACJ,GAC7B,OACE,mCACGA,EAAIQ,SAaLH,eA7BiB,SAACL,GAEpB,OAAO,QA8BP,cAAC2C,EAAD,CAAiBC,eA1CE,WACrB,OACE,qBAAKtC,UAAU,cAAf,SACE,4BACGL,EAAWiD,gBCbtBG,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f078f21a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './TabItem.sass';\n\nexport function TabItem({\n  tab,\n  currentTab,\n  handleSelectTab,\n  getHighlighterStyle,\n  renderDefaultTabLabel,\n  renderTabLabel,\n}) {\n\n  return (\n    <li className=\"tab-item\">\n      <button className={classNames('tab-item__button', {\n          'tab-item__button_active': currentTab.label === tab.label,\n        })}\n        type=\"button\"\n        onClick={() => handleSelectTab(tab)}\n      >\n        {renderTabLabel(tab) || renderDefaultTabLabel(tab)}\n      </button>\n      <span className=\"tab-item__highlighter\" style={getHighlighterStyle()}></span>\n    </li>\n  )\n}\n\nTabItem.propTypes = {\n  renderTabLabel: PropTypes.func.isRequired,\n  renderDefaultTabLabel: PropTypes.func.isRequired,\n  getHighlighterStyle: PropTypes.func.isRequired,\n  tab: PropTypes.shape({\n    value: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n  }).isRequired,\n  currentTab: PropTypes.shape({\n    value: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n  }).isRequired,\n  handleSelectTab: PropTypes.func.isRequired,\n}","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TabItem } from '../TabItem';\nimport './Tabs.sass';\n\nexport function Tabs({\n  tabsList,\n  currentTab,\n  handleSelectTab,\n  renderDefaultTabLabel,\n  renderTabLabel,\n}) {\n  const parentElement = useRef(null);\n  const [tabItemsElements, setTabItemsElements] = useState(null);\n  const [sizes, setSizes] = useState(null);\n  const transitionTime = 500;\n  const transitionStyle = `left ${transitionTime}ms, right ${transitionTime}ms`;\n\n  const getTabItemsElements = () => {\n    const tabItems = parentElement.current.querySelectorAll('li');\n\n    setTabItemsElements(tabItems);\n  }\n\n  const getSizes = () => {\n    const rootBounds = parentElement.current.getBoundingClientRect();\n\n    const sizes = {};\n\n    Object.values(tabItemsElements).forEach((item, i) => {\n      const bounds = item.getBoundingClientRect();\n\n      const left = bounds.left - rootBounds.left;\n      const right = rootBounds.right - bounds.right;\n\n      const key = tabsList[i].label;\n      sizes[key] = { left, right };\n    });\n\n    setSizes(sizes);\n  }\n\n  useEffect(() => {\n    getTabItemsElements();\n  }, []);\n\n  useEffect(() => {\n    if (!tabItemsElements) {\n      return;\n    }\n\n    getSizes();\n  }, [tabItemsElements]);\n\n  const getHighlighterStyle = () => {\n    if (!sizes) {\n      return {left: '0', right: '100%'}\n    }\n\n    const size = sizes[currentTab.label];\n\n    return {\n      left: `${size.left}px`,\n      right: `${size.right}px`,\n      transition: transitionStyle,\n    }\n  }\n\n  return (\n    <>\n      <ul className=\"tabs\" ref={parentElement}>\n        {tabsList.map(tab => (\n          <TabItem\n            key={tab.label}\n            tab={tab}\n            currentTab={currentTab}\n            handleSelectTab={handleSelectTab}\n            getHighlighterStyle={getHighlighterStyle}\n            renderDefaultTabLabel={renderDefaultTabLabel}\n            renderTabLabel={renderTabLabel}\n          />\n        ))}\n      </ul>\n    </>\n  );\n  }\n\nTabs.propTypes = {\n  renderTabLabel: PropTypes.func.isRequired,\n  renderDefaultTabLabel: PropTypes.func.isRequired,\n  tabsList: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  currentTab: PropTypes.shape({\n    value: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n  }).isRequired,\n  handleSelectTab: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function CurrentTabValue({ renderTabValue }) {\n  return (\n    <>\n      {renderTabValue()}\n    </>\n  )\n}\n\nCurrentTabValue.propTypes = {\n  renderTabValue: PropTypes.func.isRequired,\n}\n","export const options = [\n  {\n    value: 'Some text for first tab',\n    label: 'Tab One',\n  },\n  {\n    value: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore ma',\n    label: 'Tab Two',\n  },\n  {\n    value: 'Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo',\n    label: 'Tab Three',\n  }\n]\n\nexport const DEFAULT_LABELS = true;","import React, { useState } from 'react';\nimport { Tabs } from '../Tabs';\nimport { CurrentTabValue } from '../CurrentTabValue';\nimport './App.sass';\nimport { options, DEFAULT_LABELS } from '../../options/options';\n\nexport function App() {\n  const [currentTab, setCurrentTab] = useState(options[0]);\n\n  const onChange = (tab) => {\n    setCurrentTab(tab);\n  };\n\n  const renderTabValue = () => {\n    return (\n      <div className=\"current-tab\">\n        <p>\n          {currentTab.value}\n        </p>\n      </div>\n    );\n  };\n\n  const renderTabLabel = (tab) => {\n    if (DEFAULT_LABELS) {\n      return null;\n    }\n\n    return (\n      <>\n        <p>Custom label</p>\n        {tab.label}\n      </>\n    )\n  }\n\n  const renderDefaultTabLabel = (tab) => {\n    return (\n      <>\n        {tab.label}\n      </>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Tabs</h1>\n      <Tabs\n        tabsList={options}\n        currentTab={currentTab}\n        handleSelectTab={onChange}\n        renderDefaultTabLabel={renderDefaultTabLabel}\n        renderTabLabel={renderTabLabel}\n      />\n\n      <CurrentTabValue renderTabValue={renderTabValue} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}