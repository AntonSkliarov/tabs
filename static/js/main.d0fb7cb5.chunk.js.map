{"version":3,"sources":["components/TabItem/TabItem.js","propTypesShapes/tabPropTypesShapes.js","components/Tabs/Tabs.js","components/CurrentTabText/CurrentTabText.js","options/options.js","components/App/App.js","index.js"],"names":["TabItem","PropTypes","shape","value","string","isRequired","label","tab","currentTab","handleSelectTab","getHighlighterStyle","renderDefaultTabLabel","renderTabLabel","className","classNames","type","onClick","style","Tabs","tabsList","parentElement","useRef","useState","tabItemsElements","setTabItemsElements","sizes","setSizes","transitionStyle","useEffect","tabItems","current","querySelectorAll","getTabItemsElements","rootBounds","getBoundingClientRect","Object","values","forEach","item","i","bounds","left","right","key","getSizes","size","transition","ref","map","CurrentTabText","renderTabText","propTypes","func","options","App","setCurrentTab","ReactDOM","render","document","getElementById"],"mappings":"0RAMaA,GCJsBC,IAAUC,MAAM,CACjDC,MAAOF,IAAUG,OAAOC,WACxBC,MAAOL,IAAUG,OAAOC,aACvBA,WDCoB,SAAC,GAAD,IACrBE,EADqB,EACrBA,IACAC,EAFqB,EAErBA,WACAC,EAHqB,EAGrBA,gBACAC,EAJqB,EAIrBA,oBACAC,EALqB,EAKrBA,sBACAC,EANqB,EAMrBA,eANqB,OAQrB,qBAAIC,UAAU,WAAd,UACE,wBAAQA,UAAWC,IAAW,mBAAoB,CAChD,0BAA2BN,EAAWL,QAAUI,EAAIJ,QAEpDY,KAAK,SACLC,QAAS,kBAAMP,EAAgBF,IAJjC,SAMGK,EAAeL,IAAQI,EAAsBJ,KAGhD,sBAAMM,UAAU,wBAAwBI,MAAOP,W,MElB5C,SAASQ,EAAT,GAMH,IALFC,EAKC,EALDA,SACAX,EAIC,EAJDA,WACAC,EAGC,EAHDA,gBACAE,EAEC,EAFDA,sBACAC,EACC,EADDA,eAEMQ,EAAgBC,iBAAO,MAD5B,EAE+CC,mBAAS,MAFxD,mBAEMC,EAFN,KAEwBC,EAFxB,OAGyBF,mBAAS,MAHlC,mBAGMG,EAHN,KAGaC,EAHb,KAKKC,EAAe,eADE,IACF,qBADE,IACF,MA0BrBC,qBAAU,YAxBkB,WAC1B,IAAMC,EAAWT,EAAcU,QAAQC,iBAAiB,MAExDP,EAAoBK,GAsBpBG,KACC,IAEHJ,qBAAU,WACHL,GAvBU,WACf,IAAMU,EAAab,EAAcU,QAAQI,wBAEnCT,EAAQ,GAEdU,OAAOC,OAAOb,GAAkBc,SAAQ,SAACC,EAAMC,GAC7C,IAAMC,EAASF,EAAKJ,wBAEdO,EAAOD,EAAOC,KAAOR,EAAWQ,KAChCC,EAAQT,EAAWS,MAAQF,EAAOE,MAElCC,EAAMxB,EAASoB,GAAGpC,MACxBsB,EAAMkB,GAAO,CAAEF,OAAMC,YAGvBhB,EAASD,GAYTmB,KACC,CAACrB,IAEJ,IAAMb,EAAsB,WAC1B,IAAKe,EACH,MAAO,CACLgB,KAAM,IACNC,MAAO,QAIX,IAAMG,EAAOpB,EAAMjB,EAAWL,OAE9B,MAAO,CACLsC,KAAK,GAAD,OAAKI,EAAKJ,KAAV,MACJC,MAAM,GAAD,OAAKG,EAAKH,MAAV,MACLI,WAAYnB,IAIhB,OACE,mCACE,oBAAId,UAAU,OAAOkC,IAAK3B,EAA1B,SACGD,EAAS6B,KAAI,SAAAzC,GAAG,OACf,cAAC,EAAD,CAEEA,IAAKA,EACLC,WAAYA,EACZC,gBAAiBA,EACjBC,oBAAqBA,EACrBC,sBAAuBA,EACvBC,eAAgBA,GANXL,EAAIJ,c,UCzER8C,EAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAH,OAC5B,mCACGA,OAILD,EAAeE,UAAY,CACzBD,cAAejD,IAAUmD,KAAK/C,Y,gBCXnBgD,EAAU,CACrB,CACElD,MAAO,OACPG,MAAO,WAET,CACEH,MAAO,OACPG,MAAO,WAET,CACEH,MAAO,QACPG,MAAO,cCJJ,SAASgD,IAAO,IAAD,EACgBhC,mBAAS+B,EAAQ,IADjC,mBACb7C,EADa,KACD+C,EADC,KAsCpB,OACE,sBAAK1C,UAAU,MAAf,UACE,cAAC,EAAD,CACEM,SAAUkC,EACV7C,WAAYA,EACZC,gBAxCW,SAACF,GAChBgD,EAAchD,IAwCVK,eA3BiB,SAACL,GAEpB,OAAO,MA0BLI,sBAfwB,SAACJ,GAC7B,OACE,mCACGA,EAAID,WAeP,cAAC,EAAD,CAAgB4C,cAzCE,WACpB,OACE,qBAAKrC,UAAU,cAAf,SACE,4BACGL,EAAWF,gBCdtBkD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d0fb7cb5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './TabItem.sass';\nimport { TAB_PROPTYPES_SHAPE } from '../../propTypesShapes';\n\nexport const TabItem = ({\n  tab,\n  currentTab,\n  handleSelectTab,\n  getHighlighterStyle,\n  renderDefaultTabLabel,\n  renderTabLabel,\n}) => (\n  <li className=\"tab-item\">\n    <button className={classNames('tab-item__button', {\n      'tab-item__button_active': currentTab.value === tab.value,\n    })}\n      type=\"button\"\n      onClick={() => handleSelectTab(tab)}\n    >\n      {renderTabLabel(tab) || renderDefaultTabLabel(tab)}\n    </button>\n\n    <span className=\"tab-item__highlighter\" style={getHighlighterStyle()}></span>\n  </li>\n);\n\nTabItem.propTypes = {\n  tab: TAB_PROPTYPES_SHAPE,\n  currentTab: TAB_PROPTYPES_SHAPE,\n  handleSelectTab: PropTypes.func.isRequired,\n  renderTabLabel: PropTypes.func.isRequired,\n  renderDefaultTabLabel: PropTypes.func.isRequired,\n  getHighlighterStyle: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const TAB_PROPTYPES_SHAPE = PropTypes.shape({\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n}).isRequired;\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TabItem } from '../TabItem';\nimport './Tabs.sass';\nimport { TAB_PROPTYPES_SHAPE } from '../../propTypesShapes';\n\nexport function Tabs({\n  tabsList,\n  currentTab,\n  handleSelectTab,\n  renderDefaultTabLabel,\n  renderTabLabel,\n}) {\n  const parentElement = useRef(null);\n  const [tabItemsElements, setTabItemsElements] = useState(null);\n  const [sizes, setSizes] = useState(null);\n  const transitionTime = 500;\n  const transitionStyle = `left ${transitionTime}ms, right ${transitionTime}ms`;\n\n  const getTabItemsElements = () => {\n    const tabItems = parentElement.current.querySelectorAll('li');\n\n    setTabItemsElements(tabItems);\n  };\n\n  const getSizes = () => {\n    const rootBounds = parentElement.current.getBoundingClientRect();\n\n    const sizes = {};\n\n    Object.values(tabItemsElements).forEach((item, i) => {\n      const bounds = item.getBoundingClientRect();\n\n      const left = bounds.left - rootBounds.left;\n      const right = rootBounds.right - bounds.right;\n\n      const key = tabsList[i].value;\n      sizes[key] = { left, right };\n    });\n\n    setSizes(sizes);\n  };\n\n  useEffect(() => {\n    getTabItemsElements();\n  }, []);\n\n  useEffect(() => {\n    if (!tabItemsElements) {\n      return;\n    }\n\n    getSizes();\n  }, [tabItemsElements]);\n\n  const getHighlighterStyle = () => {\n    if (!sizes) {\n      return {\n        left: '0',\n        right: '100%',\n      };\n    }\n\n    const size = sizes[currentTab.value];\n\n    return {\n      left: `${size.left}px`,\n      right: `${size.right}px`,\n      transition: transitionStyle,\n    };\n  };\n\n  return (\n    <>\n      <ul className=\"tabs\" ref={parentElement}>\n        {tabsList.map(tab => (\n          <TabItem\n            key={tab.value}\n            tab={tab}\n            currentTab={currentTab}\n            handleSelectTab={handleSelectTab}\n            getHighlighterStyle={getHighlighterStyle}\n            renderDefaultTabLabel={renderDefaultTabLabel}\n            renderTabLabel={renderTabLabel}\n          />\n        ))}\n      </ul>\n    </>\n  );\n  }\n\nTabs.propTypes = {\n  tabsList: PropTypes.arrayOf(\n    TAB_PROPTYPES_SHAPE\n  ).isRequired,\n  currentTab: TAB_PROPTYPES_SHAPE,\n  handleSelectTab: PropTypes.func.isRequired,\n  renderTabLabel: PropTypes.func.isRequired,\n  renderDefaultTabLabel: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentTab.sass';\n\nexport const CurrentTabText = ({ renderTabText }) => (\n  <>\n    {renderTabText()}\n  </>\n);\n\nCurrentTabText.propTypes = {\n  renderTabText: PropTypes.func.isRequired,\n};\n","export const options = [\n  {\n    value: 'cats',\n    label: 'Tab One',\n  },\n  {\n    value: 'dogs',\n    label: 'Tab Two',\n  },\n  {\n    value: 'birds',\n    label: 'Tab Three',\n  }\n]\n\nexport const DEFAULT_LABELS = true;\n","import React, { useState } from 'react';\nimport { Tabs } from '../Tabs';\nimport { CurrentTabText } from '../CurrentTabText';\nimport './App.sass';\nimport './Reset.sass';\nimport { DEFAULT_LABELS, options } from '../../options/options';\n\nexport function App() {\n  const [currentTab, setCurrentTab] = useState(options[0]);\n\n  const onChange = (tab) => {\n    setCurrentTab(tab);\n  };\n\n  const renderTabText = () => {\n    return (\n      <div className=\"current-tab\">\n        <p>\n          {currentTab.label}\n        </p>\n      </div>\n    );\n  };\n\n  const renderTabLabel = (tab) => {\n    if (DEFAULT_LABELS) {\n      return null;\n    }\n\n    return (\n      <>\n        <p>Custom label</p>\n        {tab.label}\n      </>\n    );\n  };\n\n  const renderDefaultTabLabel = (tab) => {\n    return (\n      <>\n        {tab.label}\n      </>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <Tabs\n        tabsList={options}\n        currentTab={currentTab}\n        handleSelectTab={onChange}\n        renderTabLabel={renderTabLabel}\n        renderDefaultTabLabel={renderDefaultTabLabel}\n      />\n\n      <CurrentTabText renderTabText={renderTabText} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}